diff --git a/minimock.py b/minimock.py
index d32b60e..9c23b19 100644
--- a/minimock.py
+++ b/minimock.py
@@ -48,7 +48,7 @@ import textwrap
 
 try:
     import builtins
-except ImportError:
+except ImportError:  # pragma: PY2
     # python < 3
     import __builtin__ as builtins
     try:
@@ -58,12 +58,7 @@ except ImportError:
 else:
     # python 3
     from io import StringIO
-try:
-    next
-except NameError:
-    # python < 2.6
-    def next(x):
-        return x.next()
+
 
 # A list of mocked objects. Each item is a tuple of (original object,
 # namespace dict, object name, and a list of object attributes).
@@ -80,12 +75,12 @@ def lookup_by_name(name, nsdicts):
     of the object that completes the name.
 
         >>> import os
-        >>> nsdict, obj_name, attrs = lookup_by_name("os.path.isdir",
+        >>> nsdict, obj_name, attrs = lookup_by_name("os.path.basename",
         ...     (locals(),))
         >>> obj_name, attrs
-        ('os', ['path', 'isdir'])
+        ('os', ['path', 'basename'])
         >>> getattr(getattr(nsdict[obj_name], attrs[0]), attrs[1])  # doctest: +ELLIPSIS
-        <function isdir at ...>
+        <function basename at ...>
         >>> lookup_by_name("os.monkey", (locals(),))
         Traceback (most recent call last):
           ...
@@ -369,7 +364,7 @@ class TraceTracker(Printer):
             False
         """
         return self.checker.check_output(want, self.dump(),
-            optionflags=self.options)
+                                         optionflags=self.options)
 
     def diff(self, want):
         r"""
@@ -398,7 +393,8 @@ class TraceTracker(Printer):
             return ''
         else:
             return self.checker.output_difference(doctest.Example("", want),
-                self.dump(), optionflags=self.options)
+                                                  self.dump(),
+                                                  optionflags=self.options)
 
     def dump(self):
         r"""
@@ -464,7 +460,7 @@ def normalize_function_parameters(text):
         re.compile(r"\(\s+(\S)"): r"(\1",
         re.compile(r"(\S)\s+\)"): r"\1)",
         re.compile(r",\s*(\S)"): r", \1",
-        }
+    }
     for search_pattern, replace_pattern in normalize_map.items():
         normalized_text = re.sub(
             search_pattern, replace_pattern, normalized_text)
@@ -498,6 +494,8 @@ class MinimockOutputChecker(doctest.OutputChecker, object):
 class _DefaultTracker(object):
     def __repr__(self):
         return '(default tracker)'
+
+
 DefaultTracker = _DefaultTracker()
 del _DefaultTracker
 
@@ -551,8 +549,8 @@ class Mock(object):
             else:
                 new_name = attr
             self.mock_attrs[attr] = Mock(new_name,
-                show_attrs=self.mock_show_attrs,
-                tracker=self.mock_tracker)
+                                         show_attrs=self.mock_show_attrs,
+                                         tracker=self.mock_tracker)
         return self.mock_attrs[attr]
 
     def __setattr__(self, attr, value):
@@ -572,6 +570,7 @@ class Mock(object):
                 self.mock_tracker.set(self.mock_name, attr, value)
             self.mock_attrs[attr] = value
 
+
 __test__ = {
     "Mock":
     r"""
diff --git a/setup.py b/setup.py
index 7c7e9c5..5934917 100644
--- a/setup.py
+++ b/setup.py
@@ -15,14 +15,12 @@ setup(
     version=version,
     description='The simplest possible mock library',
     long_description=long_description,
+    long_description_content_type='text/x-rst; charset=UTF-8',
     classifiers=[
         'Development Status :: 5 - Production/Stable',
         'License :: OSI Approved :: MIT License',
         'Topic :: Software Development :: Testing',
         "Programming Language :: Python",
-        "Programming Language :: Python :: 2",
-        "Programming Language :: Python :: 2.5",
-        "Programming Language :: Python :: 2.6",
         "Programming Language :: Python :: 2.7",
         "Programming Language :: Python :: 3",
     ],
